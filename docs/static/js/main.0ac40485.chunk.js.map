{"version":3,"sources":["components/Cita.jsx","components/Formulario.jsx","components/Footer.jsx","App.jsx","index.js"],"names":["Cita","cita","eliminarCita","className","propietario","fecha","hora","mascota","sintomas","onClick","id","Formulario","crearCita","useState","setCita","error","setError","handleChance","e","target","name","value","onSubmit","preventDefault","trim","uuid","type","placeholder","onChange","Footer","propTypes","PropTypes","func","isRequired","App","citasIniciales","JSON","parse","localStorage","getItem","citas","setCitas","useEffect","setItem","stringify","newCitas","filter","titulo","length","map","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0ac40485.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nexport const Cita = ({ cita, eliminarCita }) => (\r\n        <div className=\"cita animate__animated animate__backInUp\">\r\n            <p>Dueño: <span>{cita.propietario}</span></p>\r\n            <p>Fecha: <span>{cita.fecha}</span></p>\r\n            <p>Hora: <span>{cita.hora}</span></p>\r\n            <p>Mascota: <span>{cita.mascota}</span></p>\r\n            <p>Sintomas: <span>{cita.sintomas}</span></p>\r\n            <button \r\n                className=\"button eliminar u-full-width\"\r\n                onClick={() => eliminarCita(cita.id) }\r\n                >Eliminar &times;</button>\r\n        </div>\r\n)\r\n\r\nCita.propTypes = {\r\n    cia: PropTypes.object.isRequired,\r\n    eliminarCita: PropTypes.func.isRequired\r\n}\r\n\r\n","import React, { useState } from 'react'\r\nimport uuid from \"uuid/dist/esm-browser/v4\";\r\n\r\nexport const Formulario = ({crearCita}) => {\r\n\r\n    const [cita, setCita]= useState({\r\n        mascota: '',\r\n        propietario: '',\r\n        fecha: '',\r\n        hora: '',\r\n        sintomas: ''\r\n    })\r\n\r\n    const [error, setError] = useState( false )\r\n\r\n    const handleChance = e =>{\r\n        setCita({\r\n            ...cita,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    const {mascota, propietario,fecha, hora, sintomas} = cita\r\n\r\n    const submitCita = e =>{\r\n        e.preventDefault()\r\n\r\n        if(mascota.trim() === ''|| propietario.trim() === '' || fecha.trim() === '' || hora.trim() === ''|| sintomas.trim() === '' ){\r\n            setError(true)\r\n            return;\r\n        }\r\n        setError(false)\r\n\r\n        cita.id = uuid()\r\n\r\n        //Crear cita\r\n        crearCita(cita)\r\n\r\n        //Limpiar form\r\n\r\n        setCita({\r\n            mascota: '',\r\n            propietario: '',\r\n            fecha: '',\r\n            hora: '',\r\n            sintomas: ''\r\n        })\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <h2>Crear cita</h2>\r\n            <form onSubmit={submitCita}>\r\n                <label>Nombre Mascota</label>\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"mascota\"\r\n                    className=\"u-full-width\"\r\n                    placeholder=\"Nombre Mascota\" \r\n                    onChange={handleChance}\r\n                    value={mascota}\r\n                    />\r\n\r\n                <label>Nombre Del Dueño</label>\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"propietario\"\r\n                    className=\"u-full-width\"\r\n                    placeholder=\"Nombre Del Dueño De La Mascota\" \r\n                    onChange={handleChance}\r\n                    value={propietario}\r\n                    />\r\n\r\n                <label>Fecha</label>\r\n                <input \r\n                    type=\"date\"\r\n                    name=\"fecha\"\r\n                    className=\"u-full-width\"\r\n                    onChange={handleChance}\r\n                    value={fecha}\r\n                    />\r\n\r\n                <label>Hora</label>\r\n                <input\r\n                    type=\"time\"\r\n                    name=\"hora\"\r\n                    className=\"u-full-width\"\r\n                    onChange={handleChance}\r\n                    value={hora}\r\n                    />\r\n                <label>Sintomas</label>\r\n                <textarea\r\n                    className=\"u-full-width\"\r\n                    name=\"sintomas\"\r\n                    onChange={handleChance}\r\n                    value={sintomas}\r\n                    ></textarea>\r\n\r\n                    {error ? <p className=\"alerta-error\">Todos los campos son obligatorios</p> : null}\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"u-full-width button-primary\"\r\n                    >Agregar Cita</button>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const Footer = () => {\r\n    return (\r\n        <footer className=\"footer\"><spam>Derechos reservados &copy;</spam><spam>Alejandro :D</spam></footer>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\nimport { Cita } from './components/Cita'\nimport { Formulario } from './components/Formulario'\nimport PropTypes from 'prop-types'\nimport { Footer } from './components/Footer'\n\nfunction App() {\n\n//localstorage\n\nlet citasIniciales = JSON.parse(localStorage.getItem('citas'))\nif(!citasIniciales){\n  citasIniciales = []\n}\n\n  const [citas, setCitas] = useState(citasIniciales)\n\n  useEffect( ()=>{\n    if(citasIniciales){\n      localStorage.setItem('citas', JSON.stringify(citas))\n    }else{\n      localStorage.setItem('citas', JSON.stringify([]))\n    }\n  }, [citas, citasIniciales] )\n\n  //funcion que agregue citas actuales y agregue la nueva \n  const crearCita = cita =>{\n      setCitas([\n        ...citas, \n        cita\n      ])\n  }\n\n  //eliminar cita\n\n  const eliminarCita = id => {\n    const newCitas = citas.filter(cita => cita.id !== id)\n    setCitas(newCitas)\n  }\n\n  const titulo = citas.length === 0 ? 'No hay citas' : 'Administra tus Citas'\n\n\n  return (\n    <>\n    <h1>Administrador De Pacientes</h1>\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"one-half column\">\n          <Formulario \n            crearCita={crearCita}\n          />\n        </div>\n        <div className=\"one-half column\">\n          <h2>{titulo}</h2>\n          {citas.map(cita =>(\n            <Cita \n              key={cita.id}\n              cita={cita}\n              eliminarCita={eliminarCita}\n            />\n          ))}\n        </div>\n      </div>\n    </div>\n    <Footer />\n    </>\n\n  );\n}\n\nFormulario.propTypes = {\n  crearCita: PropTypes.func.isRequired\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}